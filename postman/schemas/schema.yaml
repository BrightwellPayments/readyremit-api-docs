---
openapi: 3.0.0
info:
  title: API Reference
  version: "1.0"
servers:
- url: https://apim-readyremit-dev-eastus-001.azure-api.net/readyremit/v1
security:
- bearerAuth: []
paths:
  /oauth/token:
    post:
      tags:
      - Authentication
      summary: Get Access Token
      description: This is the description.
      operationId: getAccessToken
      requestBody:
        description: List of fields to create the recipient account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getAccessTokenRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccessTokenResponse200'
      security: []
    servers:
    - url: https://readyremit.us.auth0.com
  /banks:
    get:
      tags:
      - Banks and Branches
      summary: Get Banks
      description: Get a list of destination banks available for the given country currency
      operationId: getBanks
      parameters:
      - name: countryIso3Code
        in: query
        description: This is the description.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: bankname
        in: query
        description: This is the description.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNameArray'
  /banks/{id}/branches:
    get:
      tags:
      - Banks and Branches
      summary: Get Bank Branches
      description: Get a list of bank branches given a bank
      operationId: getBankBranches
      parameters:
      - name: id
        in: path
        description: ID of selected bank
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNameArray'
  /countries-and-currencies:
    get:
      tags:
      - Helpers
      summary: Get Countries
      description: This operation returns an array of country/currency records available to the calling application. Each record includes a country object and an array of currency objects. The calling application can present these records to the end user who can choose a recipient country and currency.
      operationId: getCountries
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/getCountriesResponse200'
  /quote:
    get:
      tags:
      - Helpers
      summary: Get Quote
      description: Given a sender amount and a corridor, this operation returns a quote including the receiver amount, fees, and disclosures. The calling application can present the quote to the end user who can decide whether to proceed with the transfer.
      operationId: getQuote
      parameters:
      - name: dstCountryIso3Code
        in: query
        description: See [country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3).
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: dstCurrencyIso3Code
        in: query
        description: See [currency codes](https://en.wikipedia.org/wiki/ISO_4217).
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: srcCurrencyIso3Code
        in: query
        description: See [currency codes](https://en.wikipedia.org/wiki/ISO_4217).
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: transferMethod
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: BANK_ACCOUNT
          enum:
          - BANK_ACCOUNT
          - CASH_PICKUP
      - name: quoteBy
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: SEND_AMOUNT
          enum:
          - SEND_AMOUNT
          - RECEIVE_AMOUNT
      - name: amount
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote'
  /recipient-fields:
    get:
      tags:
      - Recipients
      summary: Get Recipient Fields
      description: Get a list of required fields for creating or updating a Recipient record for a given corridor.
      operationId: getRecipientFields
      parameters:
      - name: dstCountryIso3Code
        in: query
        description: See [country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3).
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: dstCurrencyIso3Code
        in: query
        description: See [currency codes](https://en.wikipedia.org/wiki/ISO_4217).
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: transferMethod
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/transferMethods'
      - name: recipientType
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/recipientTypes'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fieldSetsObject'
  /recipients:
    get:
      tags:
      - Recipients
      summary: Get Recipients
      description: This is the description.
      operationId: getRecipients
      parameters:
      - name: sender
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recipient'
    post:
      tags:
      - Recipients
      summary: Create Recipient
      description: Create a recipient record. Only the minimum required fields will be validated outside the context of a corridor.
      operationId: createRecipient
      requestBody:
        description: List of fields to create the recipient
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRecipientRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipient'
        "400":
          description: Invalid or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorPayload'
  /recipients/{id}:
    get:
      tags:
      - Recipients
      summary: Get Recipient
      description: Get a recipient record by ID
      operationId: getRecipient
      parameters:
      - name: id
        in: path
        description: ID of recipient
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipient'
    put:
      tags:
      - Recipients
      summary: Update Recipient
      description: Update a recipient record by ID
      operationId: updateRecipient
      parameters:
      - name: id
        in: path
        description: ID of selected recipient
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of fields to create the recipient
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRecipientRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipient'
    delete:
      tags:
      - Recipients
      summary: Delete Recipient
      description: Deletes a recipient record
      operationId: deleteRecipient
      parameters:
      - name: id
        in: path
        description: ID of selected recipient
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: 200 Success
  /recipient-account-fields:
    get:
      tags:
      - Recipient Accounts
      summary: Get Recipient Account Fields
      description: Get a list of required fields for creating or updating a Recipient Account record for a given corridor.
      operationId: getRecipientAccountFields
      parameters:
      - name: dstCountryIso3Code
        in: query
        description: See [country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3).
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: dstCurrencyIso3Code
        in: query
        description: See [currency codes](https://en.wikipedia.org/wiki/ISO_4217).
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/string3uc'
      - name: transferMethod
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/transferMethods'
      - name: recipientType
        in: query
        description: This is the description.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/recipientTypes'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fieldSetsObject'
  /recipients/{id}/accounts:
    get:
      tags:
      - Recipient Accounts
      summary: Get Recipient Accounts
      description: This is the description.
      operationId: getRecipientAccounts
      parameters:
      - name: id
        in: path
        description: ID of selected recipient
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
    post:
      tags:
      - Recipient Accounts
      summary: Create Recipient Account
      description: This is the description.
      operationId: createRecipientAccount
      parameters:
      - name: id
        in: path
        description: ID of selected recipient
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Created
        "400":
          description: Invalid or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorPayload'
  /recipients/{id}/accounts/{accId}:
    get:
      tags:
      - Recipient Accounts
      summary: Get Recipient Account
      description: This is the description.
      operationId: getRecipientAccount
      parameters:
      - name: id
        in: path
        description: the recipient identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accId
        in: path
        description: the recipient account identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
    put:
      tags:
      - Recipient Accounts
      summary: Update Recipient Account
      description: This is the description.
      operationId: putRecipientAccount
      parameters:
      - name: id
        in: path
        description: the recipient identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accId
        in: path
        description: the recipient account identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipientAccount'
        "400":
          description: Invalid or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorPayload'
    delete:
      tags:
      - Recipient Accounts
      summary: Delete Recipient Account
      description: This is the description.
      operationId: deleteRecipientAccount
      parameters:
      - name: id
        in: path
        description: the recipient identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accId
        in: path
        description: the recipient account identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: 200 Success
        "400":
          description: 400 Invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorPayload'
  /transfers:
    post:
      tags:
      - Transfers
      summary: Execute Transfer
      description: This is the description.
      operationId: executeTransfer
      responses:
        "200":
          description: Success
        "400":
          description: Invalid or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorPayload'
components:
  schemas:
    createRecipientRequest:
      type: object
      properties:
        dstCountryIso3Code:
          $ref: '#/components/schemas/string3uc'
        dstCurrencyIso3Code:
          $ref: '#/components/schemas/string3uc'
        recipientType:
          $ref: '#/components/schemas/recipientTypes'
        transferMethod:
          $ref: '#/components/schemas/transferMethods'
        senderId:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/fieldValue'
    recipientTypes:
      type: string
      default: MYSELF
      enum:
      - MYSELF
      - SOMEONE_ELSE
      - BUSINESS
    transferMethods:
      type: string
      default: BANK_ACCOUNT
      enum:
      - BANK_ACCOUNT
      - CASH_PICKUP
    string3uc:
      maxLength: 3
      minLength: 3
      pattern: ^[A-Z]{3}$
      type: string
    idName:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    idNameArray:
      type: array
      items:
        $ref: '#/components/schemas/idName'
    country:
      required:
      - iso3Code
      - name
      type: object
      properties:
        name:
          type: string
        iso3Code:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
    currency:
      required:
      - decimalPlaces
      - iso3Code
      - name
      - symbol
      type: object
      properties:
        name:
          type: string
        iso3Code:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
        symbol:
          maxLength: 3
          type: string
        decimalPlaces:
          maximum: 3
          minimum: 0
          type: integer
    money:
      type: object
      properties:
        value:
          minimum: 0
          type: integer
        currency:
          $ref: '#/components/schemas/currency'
    adjustment:
      required:
      - amount
      - label
      type: object
      properties:
        label:
          type: string
        amount:
          $ref: '#/components/schemas/money'
    quote:
      required:
      - adjustments
      - disclosures
      - rate
      - receiveAmount
      - sendAmount
      - totalCost
      type: object
      properties:
        sendAmount:
          $ref: '#/components/schemas/money'
        receiveAmount:
          $ref: '#/components/schemas/money'
        rate:
          type: integer
        adjustments:
          type: array
          items:
            $ref: '#/components/schemas/adjustment'
        totalCost:
          $ref: '#/components/schemas/money'
        disclosures:
          type: array
          items:
            type: string
    fieldSet:
      required:
      - fields
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/textField'
    baseField:
      required:
      - fieldType
      - id
      - name
      - required
      - validationErrors
      type: object
      properties:
        fieldType:
          type: string
          enum:
          - TEXT
        id:
          type: string
        name:
          type: string
        hintText:
          type: string
        required:
          type: boolean
        validationErrors:
          type: array
          items:
            $ref: '#/components/schemas/error'
    textField:
      allOf:
      - $ref: '#/components/schemas/baseField'
      - type: object
        properties:
          placeholderText:
            type: string
          minLength:
            type: number
          maxLength:
            type: number
          regex:
            type: string
          value:
            type: string
    fieldValue:
      required:
      - id
      - type
      - value
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
          - TEXT
        value:
          type: object
          anyOf:
          - type: string
          - required:
            - currencyIso3Code
            - units
            type: object
            properties:
              units:
                type: number
              currencyIso3Code:
                maxLength: 3
                minLength: 3
                pattern: ^[A-Z]{3}$
                type: string
    sender:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/fieldValue'
    recipient:
      type: object
      properties:
        recipientId:
          type: string
        senderId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/fieldValue'
    recipientAccount:
      type: object
      properties:
        id:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/fieldValue'
    transfer:
      type: object
      properties:
        quote:
          $ref: '#/components/schemas/quote'
        sender:
          $ref: '#/components/schemas/sender'
        recipient:
          $ref: '#/components/schemas/recipient'
        recipientAccount:
          $ref: '#/components/schemas/recipientAccount'
        disclaimers:
          type: array
          items:
            type: string
    errorPayload:
      type: array
      items:
        $ref: '#/components/schemas/error'
    error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          pattern: ^[A-Z]{2}[0-9]{3}$
          type: string
          description: User facing error code that can be used to look up error details by support
        message:
          type: string
          description: User facing error message
        fieldId:
          type: string
          description: Name of the offending field.
    getAccessTokenRequest:
      required:
      - audience
      - client_id
      - client_secret
      - grant_type
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        audience:
          type: string
        grant_type:
          type: string
    getAccessTokenResponse200:
      type: object
      properties:
        access_token:
          type: string
        scope:
          type: string
        expires_in:
          type: integer
        token_type:
          type: string
    getCountriesResponse200:
      required:
      - country
      - currencies
      type: object
      properties:
        country:
          $ref: '#/components/schemas/country'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/currency'
    fieldSetsObject:
      required:
      - fieldSets
      type: object
      properties:
        fieldSets:
          type: array
          items:
            $ref: '#/components/schemas/fieldSet'
    id_accounts_body:
      required:
      - dstCountryIso3Code
      - dstCurrencyIso3Code
      - transferMethod
      type: object
      properties:
        dstCountryIso3Code:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
        dstCurrencyIso3Code:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Z]{3}$
          type: string
        transferMethod:
          type: string
          enum:
          - BANK_ACCOUNT
          - CASH_PICKUP
        fields:
          type: array
          items:
            $ref: '#/components/schemas/fieldValue'
    transfers_body:
      allOf:
      - $ref: '#/components/schemas/baseField'
      - type: object
        properties:
          quoteBy:
            type: string
            enum:
            - SEND_AMOUNT
            - RECEIVE_AMOUNT
          amount:
            type: number
          senderId:
            type: string
          recipientId:
            type: string
          recipientAccountId:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
