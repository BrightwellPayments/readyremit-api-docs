openapi: 3.0.0
info:
  version: '1.0'
  title: 'Transfer'
servers:
  - url: 'localhost:3000'
paths:
    /transfer/options/countriescurrencies:
      get:
        summary: 'Countries with Currencies'
        responses:
          '200':
            description: 'Success'
            content:
              application/json:
                schema:
                  type: array
                  items: 
                    type: object
                    required:
                        - country
                        - currencies
                    properties:
                        country: 
                            type: object
                            $ref: '#/components/schemas/country'
                        currencies:
                            type: array
                            items:
                                $ref: '#/components/schemas/currency'
                examples:
                    small_list:
                        summary: Returns two countries with 
                        value: [
                            { 
                                "country": {
                                    "name": "United States of America",
                                    "iso3Code": "USA",
                                },
                                "currencies": [
                                    {
                                        "name": "US Dollar",
                                        "iso3Code": "USD",
                                        "symbol": "$",
                                        "decimalPlaces": 2
                                    }
                                ]
                            },
                            {
                                "country": {
                                    "name": "Philippines",
                                    "iso3Code": "PHL",
                                },
                                "currencies": [
                                    {
                                        "name": "Philipine Peso",
                                        "iso3Code": "PHL",
                                        "symbol": "â‚±",
                                        "decimalPlaces": 2
                                    },
                                    {
                                        "name": "US Dollar",
                                        "iso3Code": "USD",
                                        "symbol": "$",
                                        "decimalPlaces": 2
                                    }
                                ]
                            }
                        ]
          '500':
              description: 'Server error'
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/errorPayload'
                  examples:
                    server_error:
                      summary: 'Server error'
                      value: {
                          "errors": [{
                              "message": "It's all broked up",
                              "description": "Example of a 500 exception",
                              "code": "RR500"
                          }]
                      }
    /transfer/rates:
        post:
            summary: 'Rates'
            requestBody:
                description: Rates payload
                content: 
                    'application/json':
                        schema:
                            type: object
                            required:
                                - dstCountryIso3Code
                                - dstCurrencyIso3Code
                            properties:
                                dstCountryIso3Code:
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
                                dstCurrencyIso3Code:
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
                                srcCurrencyIso3Code:
                                    description: 'Currency of the source account. Defaults to the source currency of the users default account or only account. If no account is present and no currency is provided this will return a 400 No Source Account'
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
            responses:
                '200':
                    description: 'Success'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    rate:
                                        type: integer
                                        minimum: 0
                                    effectiveLimit:
                                        type: object
                                        $ref: '#/components/schemas/money'
                            examples:
                                rates:
                                    summary: Returns two countries with 
                                    value: {
                                        "rate": 12312,
                                        "effectiveLimit": {
                                            "amount": {
                                                "value": 510500,
                                                "currency": {
                                                    "name": "United States Dollar",
                                                    "ios3Code": "USD",
                                                    "symbol": "$",
                                                    "decimalPlaces": 2
                                                }
                                            },
                                            "message": "Cannot exceed bank limit of $1,000.00"
                                        }
                                    }
                '500':
                    description: 'Server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorPayload'
                            examples:
                                server_error:
                                    summary: 'Server error'
                                    value: [
                                        {
                                            "message": "It's all broked up",
                                            "description": "Example of a 500 exception",
                                            "code": "RR500"
                                        }
                                    ]
                                    
    /transfer/quotes:
        post:
            summary: 'Quotes'
            requestBody:
                description: Quotes payload
                content: 
                    'application/json':
                        schema:
                            type: object
                            required:
                                - dstCountryIso3Code
                                - dstCurrencyIso3Code
                                - srcCurrencyIso3Code
                                - amount
                            properties:
                                dstCountryIso3Code:
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
                                dstCurrencyIso3Code:
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
                                srcCurrencyIso3Code:
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
                                amount:
                                    type: integer
                                    minimum: 1
            responses:
                '200':
                    description: 'Success'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/quote'
                            examples:
                                rates:
                                    summary: Returns two countries with 
                                    value: [
                                        {
                                            "sendAmount": {
                                                "value": 510500,
                                                "currency": {
                                                    "name": "United States Dollar",
                                                    "iso3Code": "USD",
                                                    "symbol": "$",
                                                    "decimalPlaces": 2
                                                }
                                            },
                                            "receiveAmount": {
                                                "value": 744599,
                                                "currency": {
                                                    "name": "United States Dollar",
                                                    "iso3Code": "INR",
                                                    "symbol": "$",
                                                    "decimalPlaces": 0
                                                }
                                            },
                                            "rate": 12312,
                                            "adjustments": [
                                                {
                                                    "label": "Transfer Fee",
                                                    "amount": {
                                                        "value": 29900,
                                                        "currency": {
                                                            "name": "United States Dollar",
                                                            "iso3Code": "USD",
                                                            "symbol": "$",
                                                            "decimalPlaces": 2
                                                        }
                                                    }
                                                }
                                            ],
                                            "totalCost": {
                                                "value": 1029900,
                                                "currency": {
                                                    "name": "United States Dollar",
                                                    "iso3Code": "USD",
                                                    "symbol": "$",
                                                    "decimalPlaces": 2
                                                }
                                            },
                                            "disclosures": [],
                                            "nextStep": {
                                                "type": "RECIPIENT_DETAILS",
                                                "title": "Recipient Details"
                                            }
                                        }
                                    ]
                '500':
                    description: 'Server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorPayload'
                            examples:
                                server_error:
                                    summary: 'Server error'
                                    value: {
                                        "errors": [{
                                            "message": "It's all broked up",
                                            "description": "Example of a 500 exception",
                                            "code": "RR500"
                                        }]
                                    }
    /user:
        get:
            summary: 'User'
            responses:
                '200':
                    description: 'Success'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    sourceCurrency:
                                        type: object
                                        $ref: '#/components/schemas/currency'
                            examples:
                                rates:
                                    summary: Returns two countries with 
                                    value: {
                                        "sourceCurrency": {
                                                "name": "United States Dollar",
                                                "iso3Code": "USD",
                                                "symbol": "$",
                                                "decimalPlaces": 2
                                        }
                                    }
                '500':
                    description: 'Server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorPayload'
                            examples:
                                server_error:
                                    summary: 'Server error'
                                    value: {
                                        "errors": [{
                                            "message": "It's all broked up",
                                            "description": "Example of a 500 exception",
                                            "code": "RR500"
                                        }]
                                    }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    country:
      type: object
      required:
        - name
        - iso3Code
      properties:
        name: 
          type: string
        iso3Code:
          type: string
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
    currency:
      type: object
      required:
        - name
        - iso3Code
        - symbol
        - decimalPlaces
      properties:
        name:
          type: string
        iso3Code:
          type: string
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
        symbol:
          type: string
          maxLength: 3
        decimalPlaces:
          type: integer
          minimum: 0
          maximum: 3
    money:
        type: object
        properties:
            value: 
                type: integer
                minimum: 0
            currency:
                type: object
                $ref: '#/components/schemas/currency'
    limit:
        type: object
        required:
            - amount
            - message
        properties:
            amount:
                type: object
                $ref: '#/components/schemas/money'
            message:
                type: string
    flowStep:
        type: object
        required:
            - type
            - title
        properties:
            type:
                type: string
            title:
                type: string
    adjustment:
        type: object
        required:
            - label
            - amount
        properties:
            label:
                type: string
            amount:
                type: object
                $ref: '#/components/schemas/money'
    quote:
        type: object
        required:
            - sendAmount
            - receiveAmount
            - rate
            - adjustments
            - totalCost
            - disclosures
        properties:
            sendAmount:
                type: object
                $ref: '#/components/schemas/money'
            receiveAmount:
                type: object
                $ref: '#/components/schemas/money'
            rate:
                type: integer
            adjustments:
                type: array
                items:
                    $ref: '#/components/schemas/adjustment'
            totalCost:
                type: object
                $ref: '#/components/schemas/money'
            disclosures:
                type: array
                items:
                    type: string
    errorPayload:
        type: array
        items:
            $ref: '#/components/schemas/error'
    error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          pattern: '^[A-Z]{2}[0-9]{3}$'
          description: 'User facing error code that can be used to look up error details by support'
        message:
          type: string
          description: 'User facing error message'
        description:
          type: string
          description: 'Detailed explanation of the error meant for debugging'
security:
  - bearerAuth: []