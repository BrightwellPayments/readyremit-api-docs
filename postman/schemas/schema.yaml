openapi: 3.0.0
info:
  version: '1.0'
  title: 'Transfer'
servers:
  - url: 'localhost:3000'
paths:
    /transfer/options/countriescurrencies:
      get:
        summary: 'Countries with Currencies'
        responses:
          '200':
            description: 'Success'
            content:
              application/json:
                schema:
                  type: array
                  items: 
                    $ref: '#/components/schemas/country'
                examples:
                    small_list:
                        summary: Returns two countries with 
                        value: [
                            { 
                                "name": "United States of America",
                                "iso3Code": "USA",
                                "currencies": [
                                    {
                                        "name": "US Dollar",
                                        "iso3Code": "USD",
                                        "symbol": "$"
                                    }
                                ]
                            },
                            {
                                "name": "Philippines",
                                "iso3Code": "PHL",
                                "currencies": [
                                    {
                                        "name": "Philipine Peso",
                                        "iso3Code": "PHL",
                                        "symbol": "â‚±"
                                    },
                                    {
                                        "name": "US Dollar",
                                        "iso3Code": "USD",
                                        "symbol": "$"
                                    }
                                ]
                            }
                        ]
          '500':
              description: 'Server error'
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/errorPayload'
                  examples:
                    server_error:
                      summary: 'Server error'
                      value: {
                          "errors": [{
                              "message": "It's all broked up",
                              "description": "Example of a 500 exception",
                              "code": "RR500"
                          }]
                      }
    /transfer/rates:
        post:
            summary: 'Rates'
            requestBody:
                description: Rates payload
                content: 
                    'application/json':
                        schema:
                            type: object
                            required:
                                - countryIso3Code
                                - currencyIso3Code
                            properties:
                                countryIso3Code:
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
                                currencyIso3Code:
                                    type: string
                                    maxLength: 3
                                    minLength: 3
                                    pattern: '^[A-Z]{3}$'
            responses:
                '200':
                    description: 'Success'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    rate:
                                        type: integer
                                        minimum: 0
                                    effectiveLimit:
                                        type: object
                                        $ref: '#/components/schemas/money'
                            examples:
                                rates:
                                    summary: Returns two countries with 
                                    value: {
                                        "rate": 12312,
                                        "effectiveLimit": {
                                            "amount": {
                                                "value": 510500,
                                                "currency": {
                                                    "name": "United States Dollar",
                                                    "ios3Code": "USD",
                                                    "decimalPlaces": 2
                                                }
                                            },
                                            "message": "Cannot exceed bank limit of $1,000.00"
                                        }
                                    }
                '500':
                    description: 'Server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorPayload'
                            examples:
                                server_error:
                                    summary: 'Server error'
                                    value: {
                                        "errors": [{
                                            "message": "It's all broked up",
                                            "description": "Example of a 500 exception",
                                            "code": "RR500"
                                        }]
                                    }
    /user:
        get:
            summary: 'User'
            responses:
                '200':
                    description: 'Success'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    sourceCurrency:
                                        type: object
                                        $ref: '#/components/schemas/currency'
                            examples:
                                rates:
                                    summary: Returns two countries with 
                                    value: {
                                        "sourceCurrency": {
                                                "name": "United States Dollar",
                                                "iso3Code": "USD",
                                                "symbol": "$",
                                                "decimalPlaces": 2
                                        }
                                    }
                '500':
                    description: 'Server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorPayload'
                            examples:
                                server_error:
                                    summary: 'Server error'
                                    value: {
                                        "errors": [{
                                            "message": "It's all broked up",
                                            "description": "Example of a 500 exception",
                                            "code": "RR500"
                                        }]
                                    }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    country:
      type: object
      required:
        - name
        - iso3Code
        - currencies
      properties:
        name: 
          type: string
        iso3Code:
          type: string
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
        currencies:
          type: array
          items: 
            $ref: '#/components/schemas/currency'
    currency:
      type: object
      required:
        - name
        - iso3Code
        - symbol
        - decimalPlaces
      properties:
        name:
          type: string
        iso3Code:
          type: string
          maxLength: 3
          minLength: 3
          pattern: '^[A-Z]{3}$'
        symbol:
          type: string
          maxLength: 3
        decimalPlaces:
          type: integer
          minimum: 0
          maximum: 3
    money:
        type: object
        properties:
            value: 
                type: integer
                minimum: 0
            currency:
                type: object
                $ref: '#/components/schemas/currency'
    limit:
        type: object
        required:
            - amount
            - message
        properties:
            amount:
                type: object
                $ref: '#/components/schemas/money'
            message:
                type: string
    errorPayload:
        type: object
        required:
          - errors
        properties: 
          errors:
            type: array
            items:
              $ref: '#/components/schemas/error'
    error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          pattern: '^[A-Z]{2}[0-9]{3}$'
          description: 'User facing error code that can be used to look up error details by support'
        message:
          type: string
          description: 'User facing error message'
        description:
          type: string
          description: 'Detailed explanation of the error meant for debugging'
security:
  - bearerAuth: []